### ðŸ“˜ Playbook Ansible : ArgoCD configure manifest and deploy

- name: deploy application via ArgoCD
  hosts: masters
  become: true
  tasks:
    - name: CrÃ©er le namespace ArgoCD
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: argocd
        state: present
        kubeconfig: /etc/kubernetes/admin.conf

    - name: Ajouter le dÃ©pÃ´t Helm Argo
      community.kubernetes.helm_repository:
        name: argo
        repo_url: https://argoproj.github.io/argo-helm

    - name: DÃ©ployer ArgoCD via Helm
      kubernetes.core.helm:
        name: argocd
        chart_ref: argo/argo-cd
        release_namespace: argocd
        create_namespace: false
        kubeconfig: /etc/kubernetes/admin.conf
        values:
          server:
            service:
              type: NodePort
            extraArgs:
              - --insecure
          configs:
            params:
              server.insecure: true

    - name: CrÃ©er le dossier argocd-apps sur le master
      file:
        path: /home/adminuser/argocd-apps
        state: directory
        owner: adminuser
        group: adminuser
        mode: "0755"

    - name: Copier les manifests ArgoCD
      copy:
        src: ../../argocd-apps/{{ item }}
        dest: /home/adminuser/argocd-apps/{{ item }}
        owner: adminuser
        group: adminuser
        mode: "0644"
      loop:
        - 902-stack.yaml
        - 902-stack-maeva.yaml

    - name: Appliquer les manifests ArgoCD
      become: true
      become_user: root
      command: kubectl apply -f /home/adminuser/argocd-apps/{{ item }}
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      loop:
        - 902-stack.yaml
        - 902-stack-maeva.yaml

    - name: RÃ©cupÃ©rer le mot de passe admin initial d'ArgoCD
      shell: "kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath='{.data.password}' | base64 -d"
      register: argocd_password
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - name: Afficher le port NodePort de ArgoCD
      shell: "kubectl get svc argocd-server -n argocd -o jsonpath='{.spec.ports[?(@.port==443)].nodePort}'"
      register: nodeport_output
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf

    - debug:
        msg: >-
          Mot de passe admin ArgoCD : {{ argocd_password.stdout }}
          Interface accessible via : https://{{ hostvars[inventory_hostname]['ansible_host'] }}:{{ nodeport_output.stdout }}
